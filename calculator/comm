DONE: (1) В структуре SumProfile заменить int utcsec; int utcnsec на одну переменную 
float utcsec (секунды и доли секунды) то же самое с переменной int sec; int nsec
=> float sec
(2) Многочисленные ошибки при выводе в файл среднего профиля - сбился формат
(3) Вывод в файл среднего профиля целесообразно делать одной колонкой, т.к. 
первая колонка информации при фиксированном шаге tau не содержит
DONE:  (4) Необходимо предусмотреть опцию чтения и обработки предварительно просуммированного 
файла (параметр sumchan 'yes' в исходном файле данных)
(5) Данные суммарного профиля в структуре SumProfile следует привести к нулевому 
уровню (просто вычесть среднее), а затем отнормировать от 0 до 1.
(6) Вставить фрагмент кода с пересчетом из float регистратора во float интел.
(7) В суммарном профиле в конце генерируется всегда значение "0", надо поправить
ибо будет портить дальнейшие перекалибровки
(8) Значение vect в структуре SumProfile на выходе отличаются после обработки программами 
C++ и C++ + Python ~ на 4800 единиц.
NOT NEEDED: (9) Предусмотреть вывод данных (поканальных записей, профиля, АЧХ, ККФ) в виде не только 
структур/объектов, но и векторов (как pulse.GetSumPeriodsVec()), т.к. пока не получается взять 
данные из объекта.
DONE:   (10) Нужно сделать возможность вывода в файл последовательности компенсированных за dm импульсов.
Это потребует изменение алгоритма обработки данных (сначала обработка исходного массива с 
применением фильтров, затем компенсация дисперсии, сейчас наск. понимаю сначала суммирование по периодам,
потом применение частотных фильтров и потом компенсация дисперсии).

(11) Нужны импульсные фильтры.

DONE:   (12) Функция GetDM() не описана! И вообще непонятно зачем нужна.
NOT NEEDED:   (13) Нет деструктора для класса ~BaseRun()
(14) При завершении работы обязательно! выводится сообщение типа:
"Работа программы успешно завершена
суммарный профиль записан в файл(ы) ... (с указанием полного пути)
АЧХ записана в файл ...
Характеристики кросс-корреляции записаны в файл ...
Моменты прихода импульсов записаны в файл ..."



Код для вставки п. (6)

float PulsToFloat(unsigned long pulse)

   {

   float exp,spectr_t;

     spectr_t =  (pulse&0xFFFFFF);

     exp = int(pulse&0x7F000000) >> 24;

     exp = exp -64-24;

                spectr_t=spectr_t*Power(2,exp)/ratio;

     spectr_t=sqrt(spectr_t*4/2048/2048);

     spectr_t=spectr_t*2000/2047;

                spectr_t=spectr_t*sqrt(2.0)/2;

     spectr_t=spectr_t*spectr_t;

     return spectr_t;

   }

 
